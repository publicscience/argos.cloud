- name: install nginx and uwsgi
  apt: pkg={{ item }} state=installed
  with_items:
    - uwsgi
    - nginx
    - supervisor
    - uwsgi-plugin-python3

- name: add latest node apt repository
  apt_repository: repo='ppa:chris-lea/node.js' state=present

- name: install front dependencies
  apt: pkg={{ item }} state=installed
  with_items:
    - rubygems
    - nodejs

- name: install sass
  gem: name=sass state=present

- name: set sass path env variable
  lineinfile: dest=/etc/environment line=SASS_PATH=. state=present

- name: install bower
  npm: name=bower global=yes production=yes state=present

- name: make js vendor folder
  file: path={{ app_path }}/argos/web/front/static/js/vendor state=directory owner=www-data group=www-data mode=0777 recurse=yes

- name: install bower packages
  command: chdir={{ app_path }}/argos/web/front bower install
  sudo: no

- name: remove default nginx site
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: copy nginx config
  template: src=nginx.conf dest=/etc/nginx/sites-available/{{ app_name }}.conf
  notify: restart nginx

- name: enable nginx config (symlink)
  file: src=/etc/nginx/sites-available/{{ app_name }}.conf dest=/etc/nginx/sites-enabled/{{ app_name }}.conf state=link

- name: copy uwsgi config
  template: src=uwsgi.ini  dest=/etc/uwsgi/apps-available/{{ app_name }}.ini
  notify: restart app

- name: enable uwsgi config (symlink)
  file: src=/etc/uwsgi/apps-available/{{ app_name }}.ini dest=/etc/uwsgi/apps-enabled/{{ app_name }}.ini state=link

- name: disable uwsgi # supervisor will manage it.
  service: name=uwsgi state=stopped enabled=no

- name: create supervisord config folder
  file: dest=/etc/supervisor state=directory owner=root

- name: copy supervisord init script
  file: src=supervisord-init dest=/etc/init.d/supervisord mode=0755

- name: copy supervisor program config
  template: src=supervisor.conf dest=/etc/supervisor/conf.d/{{ app_name }}.conf
  register: supervisor_conf
  notify: restart app

- shell: supervisorctl reread
  when: supervisor_conf.changed

- shell: supervisorctl update
  when: supervisor_conf.changed

- name: ensure supervisor is running
  service: name=supervisor state=started enabled=yes

- name: ensure nginx is running
  service: name=nginx enabled=yes state=started

- name: ensure app is running
  supervisorctl: name={{ app_name }} state=restarted
